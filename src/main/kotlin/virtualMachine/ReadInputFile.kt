/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package virtualMachine

import virtualMachine.stack.vm_instruction_parsing.VMInstructionParser
import java.io.File
import java.nio.charset.Charset

class ReadInputFile {

    //TODO: have some kind of initialization
    fun processInputFile(pathToInput: String,  vmParser: VMInstructionParser) : VMInstructionParser {
        val file = File(pathToInput)
        val bufferedReader = file.bufferedReader(Charset.defaultCharset())

        var count = 0

        bufferedReader
                .lines()
                .map {
                    val comment = it.indexOf("//")
                    if (comment != -1) {
                        it.substring(0, it.indexOf("//")).trim()
                    } else {
                        it.trim()
                    }
                }
                .filter {
                    !it.isEmpty()
                }
                .forEach {
                    val mem = vmParser.getVirtualMemory()
                    println(count)
                    count++
                    mem.printStack()
                    vmParser.processInstruction(it)
                }
        //do nothing with processed stack for now
        return vmParser
    }
}
